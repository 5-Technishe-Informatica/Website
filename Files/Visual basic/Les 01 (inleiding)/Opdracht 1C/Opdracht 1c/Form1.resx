<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>